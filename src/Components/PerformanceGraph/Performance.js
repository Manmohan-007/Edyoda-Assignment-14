import React, { useEffect } from "react";import classes from './Performance.module.css'import { connect } from 'react-redux'import Chart from 'chart.js';const Performance = (props) => {    let keys = Object.keys(props.performance)    let values = Object.values(props.performance)    useEffect(() => {        const ctx =  document.getElementById('myChart')        new Chart(ctx, {            type: 'horizontalBar',            data: {                labels: keys,                datasets: [{                    label: '# of Votes',                    data: values,                    borderColor: [                        '#4EBBA8',                        '#3889FC',                        '#A8D583',                        '#DB9D40',                        '#9D65CC',                        '#F7604D',                        '#D7D768'                    ],                    backgroundColor: [                        '#4EBBA8',                        '#3889FC',                        '#A8D583',                        '#DB9D40',                        '#9D65CC',                        '#F7604D',                        '#D7D768'                    ],                    borderWidth: 3,                }],            },            options: {                legend: {                    labels: {                        fontColor: '#fff',                        fontSize: 8                    }                },                scales: {                    yAxes: [{                        ticks: {                            beginAtZero:true,                            fontColor: '#fff',                            fontSize: 12,                            fontWeight: 7                        },                    }],                    xAxes: [{                        ticks: {                            fontColor: '#fff',                            fontSize: 12                        },                        barThickness: 6                    }]                },                labels: {                    fontStyle: 'bold'                }            }        })    })    Chart.defaults.global.elements.rectangle.barThickness = 3    Chart.defaults.global.defaultFontStyle = 'bold'    return(        <div className={classes.MainContainer}>            <h4 className={classes.MainTitle}>Performance</h4>            <canvas className={classes.Chart} id='myChart'></canvas>        </div>    )}let fetchGlobalStoreData = (globalStore) => {    return globalStore.allData.data.dasbhoardPage}export default connect(fetchGlobalStoreData)(Performance)