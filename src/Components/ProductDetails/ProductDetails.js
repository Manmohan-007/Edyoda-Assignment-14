import React from "react";import classes from './ProductDetails.module.css'import { connect } from 'react-redux'import { Bin, Check } from "../../Assets/Icons";const ProductDetails = (props) => {    const handleProjectData = () => {        props.activeProduct(props.name)        props.history.push('/product_data/' + props.productId)    }    const updateSelection = () => {        let id = props.productId        let tempArray = props.selected        if(tempArray.includes(id)) {            let index = tempArray.indexOf(id)            tempArray.splice(index,1)            props.selectProducts(tempArray)        } else {            tempArray.push(id)            props.selectProducts(tempArray)        }    }    const deleteSelected = () => {        let id = props.productId        let data = props.data        data.productsPage.products.splice(id,1)        props.deleteProduct(data)    }    return(        <tr className={classes.MainContainer}>            <td onClick={() => updateSelection()} className={classes.TableEntries}>                <div className={`${props.selected.includes(props.productId) ? classes.Selected: classes.Checkbox}`}>{Check}</div>            </td>            <td onClick={() => handleProjectData()} className={classes.TableEntries}>{props.name}</td>            <td onClick={() => handleProjectData()} className={classes.TableEntries}>{props.unitSold}</td>            <td onClick={() => handleProjectData()} className={classes.TableEntries}>{props.stock}</td>            <td onClick={() => handleProjectData()} className={classes.TableEntries}>{props.expireDate}</td>            <td onClick={() => deleteSelected()} className={classes.TableEntries}>                <div className={classes.DeleteBin}>{Bin}</div>            </td>        </tr>    )}let updateAllData = (dispatch) => {    return {        activeProduct: (productName) => dispatch({type : 'VIEW_PRODUCT', data: productName}),        selectProducts: (updateSelection) => dispatch({type : 'SELECTION', data: updateSelection}),        deleteProduct: (updatedData) => dispatch({type: 'DELETE_PRODUCT', data: updatedData})    }}export default connect('',updateAllData)(ProductDetails)