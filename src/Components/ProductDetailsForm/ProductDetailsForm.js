import React from "react";import classes from './ProductDetailsForm.module.css'import { connect } from 'react-redux'const ProductDetailsForm = (props) => {    let selectedProducts    const changeData = (e) => {        if(props.hasOwnProperty('newData')) {            props.newData(e.target.name, e.target.value)        }    }    if(props.match != undefined) {        selectedProducts = props.products[props.match.params.id]    }    if(selectedProducts == undefined) {        selectedProducts = {            name: '',            description: '',            category: 'Select Category',            type: 'date',            stock: ''        }    }    return(        <form className={classes.FormContainer}>            <label className={classes.FormLabels}>Product Name</label>            <input onChange={(e) => changeData(e)} className={classes.InputFields} type='text' placeholder={selectedProducts.name} name='name'/>            <label className={classes.FormLabels}>Description</label>            <textarea onChange={(e) => changeData(e)} rows='5' name={'description'} className={classes.InputFields} placeholder={selectedProducts.description}></textarea>            <label className={classes.FormLabels}>Category</label>            <select onChange={(e) => changeData(e)} className={[classes.InputFields, classes.Dropdown].join(' ')} name='category'>                <option name='category' value=''>{selectedProducts.category}</option>                {                    props.categories.map((item) => {                        return <option name='category' value='new arrival'>{item}</option>                    })                }                {/*<option name='category' value='new arrival'>New Arrival</option>*/}                {/*<option name='category' value='most popular'>Most Popular</option>*/}                {/*<option name='category' value='trending'>Trending</option>*/}            </select>            <div className={classes.SubSection}>                <div className={classes.ExpiryContainer}>                    <label className={classes.FormLabels}>Expiry Date</label>                    <input onChange={(e) => changeData(e)} name={'expireDate'} className={classes.InputFields} type={`${selectedProducts.type ? selectedProducts.type : 'text'}`} value={selectedProducts.expireDate}/>                </div>                <div className={classes.UnitsInStockSection}>                    <label className={classes.FormLabels}>Units In Stock</label>                    <input onChange={(e) => changeData(e)} className={classes.InputFields} type='number' name={'stock'} placeholder={selectedProducts.stock}/>                </div>            </div>        </form>    )}const fetchFromGlobalStore = (globalStore) => {    return {        ...globalStore.allData,        ...globalStore.allData.data.productsPage    }}export default connect(fetchFromGlobalStore)(ProductDetailsForm)