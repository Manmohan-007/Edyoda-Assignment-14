import React from 'react'import classes from './AddProductPage.module.css'import { connect } from 'react-redux'import ProductDetailsForm from "../../Components/ProductDetailsForm/ProductDetailsForm";import UploadProduct from "../../Components/UploadProductImage/UploadProductImage";import ButtonGenerator from "../../Components/ButtonGenerator/ButtonGenerator";const AddProductPage = (props) => {    let newData = {        name: '',        description: '',        category: '',        expireDate: '',        stock: ''    }    const updateDataObj = (name, value) => {        if(newData.hasOwnProperty(name)) {            newData[name] = value        }    }    const uploadNewData = () => {        let values = Object.values(newData)        let notValid = false        values.map((item) => {            if(item == "") {                notValid = true            }        })        if(!notValid) {            console.log(props.data)            let actualData = props.data            actualData.productsPage.products.push(newData)            props.modifyData(actualData)            props.history.push('products')            props.changeActivePage('products')        } else {            alert('PLease fill all the fields')        }    }    return(        <div className={classes.MainContainer}>            <h4 className={classes.MainTitle}>Add Product</h4>            <div className={classes.SectionsContainer}>                <div className={classes.LeftSection}>                    <ProductDetailsForm newData={updateDataObj}/>                </div>                <div className={classes.RightSection}>                    <UploadProduct />                </div>            </div>            <div onClick={() => uploadNewData()} className={classes.ButtonContainer}>                <ButtonGenerator BtnTitle={'Add Product Now'} />            </div>        </div>    )}let fetchDataFromGlobalStore = (globalStore) => {    return globalStore.allData}let updateGlobalStoreData = (dispatch) => {    return {        modifyData: (data) => dispatch({type: 'ADD_PRODUCT', data: data})    }}export default connect(fetchDataFromGlobalStore, updateGlobalStoreData)(AddProductPage)